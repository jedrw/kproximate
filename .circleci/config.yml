version: 2.1

commands:
  setup_helm:
    steps:
      - run: curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - run: chmod 700 /tmp/get_helm.sh
      - run: /tmp/get_helm.sh
      - run: helm plugin install https://github.com/chartmuseum/helm-push

jobs:
  test:
    working_directory: ~/project/kproximate
    docker: 
      - image: cimg/go:1.22
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
            - go-mod-v1
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: 
          name: Run tests
          command: go test ./...
  build_image:
    docker:
      - image: cimg/go:1.20
    parameters:
      component:
        type: string    
    steps:
      - setup_remote_docker
      - checkout
      - run: 
          name: Setup docker buildx
          command: docker buildx create --use --name multiarch --driver docker-container
      - run:
          name: Login to dockerhub
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run:
          name: Build & push << parameters.component >> image
          command: docker buildx build --platform linux/amd64,linux/arm64 -f docker/Dockerfile.<< parameters.component >> -t lupinelab/kproximate-<< parameters.component >>:$CIRCLE_TAG --push . 
  publish_helm_chart:
    docker:
      - image: cimg/base:current
    steps:
      - setup_helm
      - checkout
      - run:
          name: Package the helm chart
          command: helm package chart/kproximate/ --version $CIRCLE_TAG
      - run:
          name: Push the helm chart
          command: helm cm-push kproximate-$CIRCLE_TAG.tgz https://charts.lupinelab.co.uk

workflows:
  test_build_and_publish:
    jobs:
      - test:
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
      - build_image:
          name: build << matrix.component >> image
          context:
            - dockerhub
          requires:
            - test
          matrix:
            parameters:
              component: ["controller", "worker"]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /\d+\.\d+\.\d+/
      - publish_helm_chart:
          context:
            - charts.lupinelab.co.uk
          requires:
            - test
            - build_image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /\d+\.\d+\.\d+/

